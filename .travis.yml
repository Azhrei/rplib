# The .travis/builder.sh script now takes into account whether this is a
# tagged commit and whether it's part of the RPTools repository.  If the
# answer is yes to both, then "./gradlew bintrayUpload" is executed.
# Otherwise, it's just a regular "./gradlew build".
#
# Eventually, we'll have Travis do this as a deploy target:
#   https://docs.travis-ci.com/user/deployment/bintray/
language: java
script: ./.travis/builder.sh
jdk: oraclejdk8

# Shamelessly copied from Jamz's TokenTool configuration file. :)
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"

# This will cause a deploy back to GitHub for any tagged commit.  Note
# that tagging from the command line seems to require the "-a" option
# when tagging in order to trigger Travis to deploy.
deploy:
  - provider: releases
    api_key: $DEPLOYMENT_KEY

    # Must prevent 'git stash --all' that Travis does -- we want the JARs
    # to still be in place!
    skip_cleanup: true

    file_glob: true
    file: build/libs/*.jar

    # The 'draft' tag prevents the release from being public unless/until
    # the release is edited at github.com and the state changed.
    draft: true
    on:
      tags: true

# And this will deploy to bintray.  This is only for libraries, of course.
# The deployment descriptor, bintray.deploy.json, is created by Gradle
# when it builds the JAR.
  - provider: bintray
    skip_cleanup: true
    file: package/bintray.deploy.json
    user: $BINTRAY_USER
    key: $BINTRAY_KEY
# Add 'passphrase: ...' if a GPG-signed key is used (primarily
# for when bintray artifacts are published to JCenter or Maven).
    on:
      tags: true
    edge:
      branch: v1.8.47
